apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
spec:
  project: loki
  source:
    chart: loki
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.19.0
    helm:
      releaseName: loki
      valuesObject:
      loki:
      schemaConfig:
        configs:
          - from: "2024-04-01"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      ingester:
        chunk_encoding: snappy
      querier:
        # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
        max_concurrent: 4
      pattern_ingester:
        enabled: true
      limits_config:
        allow_structured_metadata: true
        volume_enabled: true
        retention_period: 672h
      compactor:
        retention_enabled: true 
        delete_request_store: s3

    deploymentMode: Distributed

    ingester:
      replicas: 3 # To ensure data durability with replication
    querier:
      replicas: 3 # Improve query performance via parallelism
      maxUnavailable: 2
    queryFrontend:
      replicas: 2
      maxUnavailable: 1
    queryScheduler:
      replicas: 2
    distributor:
      replicas: 3 
      maxUnavailable: 2
    compactor:
      replicas: 1
    indexGateway:
      replicas: 2
      maxUnavailable: 1

    bloomCompactor:
      replicas: 0
    bloomGateway:
      replicas: 0

    backend:
      replicas: 0
    read:
      replicas: 0
    write:
      replicas: 0

    singleBinary:
      replicas: 0

    # This exposes the Loki gateway so it can be written to and queried externaly
    gateway:
      service:
        type: LoadBalancer


    # Enable minio for storage
    minio:
      enabled: true
  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring
